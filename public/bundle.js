!function(e){function t(t){for(var n,i,o=t[0],c=t[1],l=t[2],d=0,f=[];d<o.length;d++)i=o[d],s[i]&&f.push(s[i][0]),s[i]=0;for(n in c)Object.prototype.hasOwnProperty.call(c,n)&&(e[n]=c[n]);for(u&&u(t);f.length;)f.shift()();return r.push.apply(r,l||[]),a()}function a(){for(var e,t=0;t<r.length;t++){for(var a=r[t],n=!0,o=1;o<a.length;o++){var c=a[o];0!==s[c]&&(n=!1)}n&&(r.splice(t--,1),e=i(i.s=a[0]))}return e}var n={},s={0:0},r=[];function i(t){if(n[t])return n[t].exports;var a=n[t]={i:t,l:!1,exports:{}};return e[t].call(a.exports,a,a.exports,i),a.l=!0,a.exports}i.m=e,i.c=n,i.d=function(e,t,a){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(i.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(a,n,function(t){return e[t]}.bind(null,n));return a},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="";var o=window.webpackJsonp=window.webpackJsonp||[],c=o.push.bind(o);o.push=t,o=o.slice();for(var l=0;l<o.length;l++)t(o[l]);var u=c;r.push([32,1]),a()}([,,,,,,,,function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.setErrorState=function(e){return{type:"SET_ERROR_STATE",errorObj:e}},t.closeModal=function(){return{type:"CLOSE_MODAL"}}},,,,,,,,function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getStationCode=t.fetchSelectedCityInfo=t.fetchLocationsByPostalCode=t.fetchLocationsByInput=t.updateTimeZoneOfCurrentCity=t.setCurrentCity=t.setCities=void 0;var n,s=a(17),r=(n=s)&&n.__esModule?n:{default:n},i=a(26),o=a(8),c=a(72);var l=t.setCities=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return{type:"SET_CITIES",cities:e}},u=(t.setCurrentCity=function(e){return{type:"SET_CURRENT_CITY",city:e}},t.updateTimeZoneOfCurrentCity=function(e){return{type:"UPDATE_CURRENT_CITY_TZ",timeZoneName:e}}),d=(t.fetchLocationsByInput=function(e){return function(t){return(0,r.default)({method:"get",params:{q:e,apiKey:c.AW_API_KEY,details:!0},url:c.AW_LOCATIONS_AUTOCOMPLETE_API}).then((function(e){t(l(e.data.map((function(e){return{key:e.Key,name:e.LocalizedName,state:e.AdministrativeArea.LocalizedName,country:e.Country.LocalizedName}}))))})).catch((function(e){console.log("Fetching locations has failed with an error ",e),t((0,o.setErrorState)({isOpen:!0,errorMessage:"Fetching locations has failed with an error",error:e.message,errorType:"Blocker"}))}))}},t.fetchLocationsByPostalCode=function(e){return function(t){return(0,r.default)({method:"get",params:{q:e,apiKey:c.AW_API_KEY,details:!0},url:c.AW_LOCATIONS_POSTAL_CODE_API}).then((function(e){t(l(e.data.map((function(e){return{key:e.Key,name:e.LocalizedName,state:e.AdministrativeArea.LocalizedName,country:e.Country.LocalizedName}}))))})).catch((function(e){console.log("Fetching locations has failed with an error ",e),t((0,o.setErrorState)({isOpen:!0,errorMessage:"Fetching locations has failed with an error",error:e.message,errorType:"Blocker"}))}))}},t.fetchSelectedCityInfo=function(e,t){return function(a){return(0,r.default)({method:"get",params:{apiKey:c.AW_API_KEY,details:!0},url:""+c.AW_LOCATIONS_LOCATION_KEY_API+e+".json"}).then((function(n){var s=new Date;a((0,i.fetchSelectedCityForecast)({lat:n.data.GeoPosition.Latitude,lng:n.data.GeoPosition.Longitude,tz:n.data.TimeZone.GmtOffset,day:t.getDate(),month:t.getMonth()+1,year:t.getFullYear()})).then((function(){s.getDate()===t.getDate()&&a(d(n.data.PrimaryPostalCode,e,n.data.Country.ID))})),a(u(n.data.TimeZone.Name)),a(l([]))})).catch((function(e){console.log("Fetching coordinates of a selected city failed with an error",e),a((0,o.setErrorState)({isOpen:!0,errorMessage:"Fetching coordinates of a selected city failed with an error",error:e.message,errorType:"Blocker"}))}))}},t.getStationCode=function(e,t,a){return function(n,s){if(!s().bfInfo.currentForecast.isDefault)return(0,r.default)({params:{q:e,apiKey:c.AW_API_KEY,details:!0},url:c.AW_LOCATIONS_POSTAL_CODE_API}).then((function(s){var r=s.data.find((function(e){return e.Country.ID===a}));n((0,i.fetchBFR)(e,t,r.Details.StationCode))})).catch((function(a){n((0,i.fetchBFR)(e,t,null))}))}})},,,,,,,,,,function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fetchBFR=t.fetchSelectedCityForecast=t.setCurrentCityBFR=t.setCurrentCityForecast=void 0;var n,s=a(17),r=(n=s)&&n.__esModule?n:{default:n},i=a(8),o=a(71);var c=t.setCurrentCityForecast=function(e){return{type:"SET_CITY_FORECAST",info:e}},l=t.setCurrentCityBFR=function(e){return{type:"SET_CITY_BFR",info:e}};t.fetchSelectedCityForecast=function(e){var t=e.lat,a=e.lng,n=e.tz,s=e.day,l=e.month,u=e.year;return function(e){return(0,r.default)({method:"get",params:{lat:t,lng:a,tz:n,day:s,month:l,year:u},url:o.BF_SOLUNAR_API}).then((function(t){e(c(t.data.output))})).catch((function(t){console.log("Fetching selected city forecast failed with an error",t),e((0,i.setErrorState)({isOpen:!0,errorMessage:"Fetching selected city forecast failed with an error",error:t.message,errorType:"Blocker"}))}))}},t.fetchBFR=function(e,t,a){return function(n){return(0,r.default)({method:"get",params:{postalCode:e&&e.indexOf(" ")<0?e:JSON.stringify(""),locationKey:parseInt(t),stationCode:a||JSON.stringify("")},headers:{"x-api-key":o.BFR_API_KEY,"Content-Type":"application/json","x-request-key":o.BFR_REQUEST_KEY},url:o.BFR_API}).then((function(e){n(l(e.data.bfrDetails[0]))})).catch((function(e){console.log("Fetching BassForecast Rating has failed with an error",e),n((0,i.setErrorState)({isOpen:!0,errorMessage:"Fetching BassForecast Rating has failed with an error",error:e.message,errorType:"BFR"}))}))}}},,,,,,function(e,t,a){"use strict";var n=l(a(1)),s=a(9),r=l(a(37)),i=l(a(41)),o=l(a(78)),c=a(10);function l(e){return e&&e.__esModule?e:{default:e}}a(84),a(85);var u=(0,o.default)();r.default.render(n.default.createElement(c.Provider,{store:u},n.default.createElement(s.BrowserRouter,null,n.default.createElement(i.default,null))),document.getElementById("root"))},,,,,,,,,function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}(),s=y(a(1)),r=a(9),i=y(a(15)),o=y(a(45)),c=y(a(46)),l=y(a(47)),u=(y(a(48)),y(a(50))),d=y(a(51)),f=y(a(75)),m=a(10),h=a(16),p=a(76),v=y(a(77)),g=a(8);function y(e){return e&&e.__esModule?e:{default:e}}function _(e){if(Array.isArray(e)){for(var t=0,a=Array(e.length);t<e.length;t++)a[t]=e[t];return a}return Array.from(e)}var b=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a.state={activeIndex:0,activeDates:[],selectedDate:new Date,today:new Date},a.onDateSelect=a.onDateSelect.bind(a),a.closeErrorModal=a.closeErrorModal.bind(a),a}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),n(t,[{key:"componentDidMount",value:function(){console.log(this.props);for(var e=new Date,t=[],a=0;a<10;a++){var n=new Date;n.setDate(e.getDate()+a),t=[].concat(_(t),[n])}this.setState({activeDates:t}),this.params=i.default.parse(this.props.location.search),this.adsAppFlyerLink="https://bassforecast.onelink.me/5aRm/"+this.params.ads,this.props.dispatch((0,h.fetchSelectedCityInfo)(this.props.currentCity.key,this.state.selectedDate)),this.props.dispatch((0,p.setCurrentMoonPhase)(this.state.selectedDate))}},{key:"onDateSelect",value:function(e){var t=this;this.setState({activeIndex:e,selectedDate:this.state.activeDates[e]},(function(){t.props.dispatch((0,h.fetchSelectedCityInfo)(t.props.currentCity.key,t.state.selectedDate)),t.props.dispatch((0,p.setCurrentMoonPhase)(t.state.selectedDate))}))}},{key:"closeErrorModal",value:function(){this.props.dispatch((0,g.closeModal)())}},{key:"render",value:function(){var e=this;return s.default.createElement("div",{className:"App"},s.default.createElement(v.default,{errorModal:this.props.errorModal,onClick:this.closeErrorModal}),s.default.createElement("div",{className:"app__container",id:"bg-container"},s.default.createElement(d.default,{selectedDate:this.state.selectedDate}),s.default.createElement("div",{className:"date__strip-container mx-auto"},s.default.createElement("div",{className:"date__strip"},this.state.activeDates.map((function(t,a){if(a<5)return s.default.createElement(u.default,{date:t,onClick:function(){e.onDateSelect(a)},active:e.state.activeIndex===a,index:a,key:a})}))),s.default.createElement("div",{className:"date__strip"},this.state.activeDates.map((function(t,a){if(a>4)return s.default.createElement(u.default,{date:t,onClick:function(){e.onDateSelect(a)},active:e.state.activeIndex===a,index:a,key:a})})))),s.default.createElement("div",{className:"row justify-content-center display__ad-row"},s.default.createElement("div",{id:"displayAdHorizontal"},s.default.createElement("a",{href:this.adsAppFlyerLink,target:"_blank"},s.default.createElement("img",{style:{maxWidth:"100%",height:"auto"},src:"images/HorizontalBanner/h_0282_Bassforecast_MobileAd3_728x90.jpg"})))),s.default.createElement("div",{className:"container solarlunar__row"},s.default.createElement(f.default,{sunrise:this.props.bfInfo.currentForecast.sunrise,sunset:this.props.bfInfo.currentForecast.sunset,moonrise:this.props.bfInfo.currentForecast.moonrise,moonset:this.props.bfInfo.currentForecast.moonset})),this.props.bfInfo.currentForecast.sunrise&&s.default.createElement("div",null,s.default.createElement("div",{className:"row justify-content-center clock__row",style:{zIndex:1}},s.default.createElement(o.default,{sunrise:this.props.bfInfo.currentForecast.sunrise,sunset:this.props.bfInfo.currentForecast.sunset,moonrise:this.props.bfInfo.currentForecast.moonrise,moonset:this.props.bfInfo.currentForecast.moonset,majorTimes:this.props.bfInfo.currentForecast.majorTimes,minorTimes:this.props.bfInfo.currentForecast.minorTimes,isToday:this.state.selectedDate.getDate()===this.state.today.getDate(),bfInfo:this.props.bfInfo.currentBFR,currentCityTz:this.props.currentCity.timeZoneName})),s.default.createElement("div",{className:"row clock__row widget"},s.default.createElement("div",{className:"widget"},s.default.createElement(c.default,{majorTimes:this.props.bfInfo.currentForecast.majorTimes,minorTimes:this.props.bfInfo.currentForecast.minorTimes}),s.default.createElement(l.default,{percentage:this.props.moonPhase.percentage,phaseOfMoon:this.props.moonPhase.phaseOfMoon})))),s.default.createElement("div",{className:"row justify-content-end display__ad-row vertical"},s.default.createElement("div",{id:"displayAdVertical"}))))}}]),t}(s.default.Component);t.default=(0,m.connect)((function(e){return{bfInfo:e.bfInfo,currentCity:e.citiesInfo.currentCity,moonPhase:e.moonPhase,errorModal:e.errorModal}}))((0,r.withRouter)(b))},,,,function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}(),s=o(a(1)),r=a(9),i=o(a(15));function o(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a.state={overlayHeight:"290px"},a}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),n(t,[{key:"componentDidMount",value:function(){this.updateOverlayHeight(),window.addEventListener("resize",this.updateOverlayHeight.bind(this)),this.canvasContext=this.refs.canvas.getContext("2d"),this.centerX=Math.floor(this.refs.canvas.width/2),this.centerY=Math.floor(this.refs.canvas.height/2),this.radius=Math.floor((this.refs.canvas.width-40)/2),this.benchMarks=["12 AM","6 AM","12 PM","6 PM"],this.updateCanvas(!1,this.props.isToday),this.params=i.default.parse(this.props.location.search),this.solunarAppFlyerLink="https://bassforecast.onelink.me/5aRm/"+this.params.solunar,console.log(this.params)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("resize",this.updateOverlayHeight.bind(this))}},{key:"componentDidUpdate",value:function(e){this.props!==e&&this.updateCanvas(!0,this.props.isToday)}},{key:"updateOverlayHeight",value:function(){this.setState({overlayHeight:this.refs.canvas.offsetWidth})}},{key:"getCurrentTime",value:function(){var e=this.props.currentCityTz,t=new Date((new Date).toLocaleString("en-US",{timeZone:e})),a=t.getHours(),n=a>=12?"pm":"am";return(a=(a%=12)||12)+":"+t.getMinutes()+n}},{key:"updateCanvas",value:function(e,t){var a=this;this.canvasContext.clearRect(0,0,this.refs.canvas.width,this.refs.canvas.height),this.canvasContext.beginPath(),this.drawOuterCircle(),this.fillClockRimColor(),this.setMinorGradient(),this.setMajorGradient(),this.benchMarks.forEach((function(t){a.drawClockPointer("#7d818c",t,e?30:0)})),this.drawArc(this.props.sunrise,this.props.sunset,"#ffc657"),this.drawArc(this.props.sunset,this.props.sunrise,"#8094aa"),this.drawInnerCircle(t),this.setIconsBasedOnTime(this.props.sunrise,"SunriseClock"),this.setIconsBasedOnTime(this.props.sunset,"SunsetClock"),this.setIconsBasedOnTime(this.props.moonrise,"MoonriseClock"),this.setIconsBasedOnTime(this.props.moonset,"MoonsetClock"),this.props.currentCityTz&&this.setIconsBasedOnTime(this.getCurrentTime(),"Currenttime"),this.canvasContext.closePath()}},{key:"drawOuterCircle",value:function(){this.canvasContext.save(),this.canvasContext.arc(this.centerX,this.centerY,this.radius+20,0,2*Math.PI,!1),this.canvasContext.clip(),this.canvasContext.beginPath(),this.canvasContext.lineWidth=3,this.canvasContext.strokeStyle="#fff",this.canvasContext.shadowColor="black",this.canvasContext.shadowBlur=15,this.canvasContext.shadowOffsetX=0,this.canvasContext.shadowOffsetY=0,this.canvasContext.arc(this.centerX,this.centerY,this.radius+2,0,2*Math.PI,!1),this.canvasContext.stroke(),this.canvasContext.closePath(),this.canvasContext.restore()}},{key:"setMinorGradient",value:function(){var e=this.canvasContext.createRadialGradient(this.centerX,this.centerY,5,this.centerX,this.centerY,this.centerX);e.addColorStop(1,"#F7D18C"),e.addColorStop(0,"white"),this.drawPie(this.props.minorTimes[0][0],this.props.minorTimes[0][1],e),this.drawPie(this.props.minorTimes[1][0],this.props.minorTimes[1][1],e)}},{key:"setMajorGradient",value:function(){var e=this.canvasContext.createRadialGradient(this.centerX,this.centerY,5,this.centerX,this.centerY,this.centerX);e.addColorStop(1,"#5bf1d8"),e.addColorStop(0,"white"),this.drawPie(this.props.majorTimes[0][0],this.props.majorTimes[0][1],e),this.drawPie(this.props.majorTimes[1][0],this.props.majorTimes[1][1],e)}},{key:"drawPie",value:function(e,t,a){this.canvasContext.beginPath(),this.canvasContext.moveTo(this.centerX,this.centerY),this.canvasContext.arc(this.centerX,this.centerY,this.radius,this.timeToRadians(e),this.timeToRadians(t)),this.canvasContext.fillStyle=a,this.canvasContext.fill(),this.canvasContext.closePath()}},{key:"drawArc",value:function(e,t,a){this.canvasContext.beginPath(),this.canvasContext.arc(this.centerX,this.centerY,this.radius,this.timeToRadians(e),this.timeToRadians(t)),this.canvasContext.lineWidth=10,this.canvasContext.strokeStyle=a,this.canvasContext.stroke(),this.canvasContext.closePath()}},{key:"fillClockRimColor",value:function(){this.canvasContext.beginPath(),this.canvasContext.moveTo(this.centerX,this.centerY),this.canvasContext.arc(this.centerX,this.centerY,this.radius,0,2*Math.PI),this.canvasContext.fillStyle="#fff",this.canvasContext.fill(),this.canvasContext.closePath()}},{key:"drawClockPointer",value:function(e,t,a){switch(this.canvasContext.beginPath(),this.canvasContext.font="lighter 24px sans-serif",this.canvasContext.fillStyle=e,t){case"12 PM":this.canvasContext.moveTo(this.centerX,this.centerY-this.radius),this.canvasContext.lineTo(this.centerX,45),this.canvasContext.fillText(t,this.centerX-30+a,70);break;case"12 AM":this.canvasContext.moveTo(this.centerX,this.centerY+this.radius),this.canvasContext.lineTo(this.centerX,2*this.centerY-45),this.canvasContext.fillText(t,this.centerX-30+a,2*this.centerY-55);break;case"6 AM":this.canvasContext.moveTo(this.centerX-this.radius,this.centerY),this.canvasContext.lineTo(45,this.centerY),this.canvasContext.fillText(t,50+a,this.centerY+7);break;default:this.canvasContext.moveTo(this.centerX+this.radius,this.centerY),this.canvasContext.lineTo(2*this.centerX-45,this.centerY),this.canvasContext.fillText(t,2*this.centerX-105+a,this.centerY+7)}this.canvasContext.lineWidth=2,this.canvasContext.strokeStyle=e,this.canvasContext.stroke(),this.canvasContext.closePath()}},{key:"timeToRadians",value:function(e,t){var a=e.match(/[a-zA-Z]+|[0-9]+/g);if(null!==a){var n=parseInt(a[0]),s=parseInt(a[1]),r=a[2],i=360*((60*(n=12===n?"pm"===r?12:0:"pm"===r?n+12:n)+s)/1440);return(i=t?(i+180)%360:(i+90)%360)*(Math.PI/180)}}},{key:"setIconsBasedOnTime",value:function(e,t){var a=this.refs.canvas.width/2,n="Currenttime"===t?36:42,s=this.timeToRadians(e),r=this.centerX+a*Math.cos(s),i=this.centerY+a*Math.sin(s),o=this.timeToRadians(e,!0),c=-n/2+-n/2*Math.sin(o),l=0+-n/2*(1-Math.cos(o)),u=new Image;u.src="/images/"+t+"/icon.png",u.srcset="/images/"+t+"/icon.png 1x, /images/"+t+"/icon@2x.png 2x, /images/"+t+"/icon@3x.png 3x";var d=this;u.onload=function(){d.canvasContext.save(),d.canvasContext.translate(c,l),d.canvasContext.drawImage(u,r,i,n,n),d.canvasContext.translate(c,c),d.canvasContext.restore()}}},{key:"drawInnerCircle",value:function(e){this.canvasContext.save();var t=.55*this.radius;this.canvasContext.beginPath(),this.canvasContext.fillStyle="#ebf4fa",this.canvasContext.arc(this.centerX,this.centerY,t,0,2*Math.PI,!1),this.canvasContext.closePath(),this.canvasContext.fill(),this.canvasContext.beginPath(),this.canvasContext.arc(this.centerX,this.centerY,t,0,2*Math.PI,!1),this.canvasContext.clip(),this.canvasContext.beginPath(),this.canvasContext.lineWidth=2,this.canvasContext.shadowColor="black",this.canvasContext.strokeStyle="black",this.canvasContext.shadowBlur=15,this.canvasContext.shadowOffsetX=0,this.canvasContext.shadowOffsetY=0,this.canvasContext.arc(this.centerX,this.centerY,t+2.5,0,2*Math.PI,!1),this.canvasContext.stroke(),this.canvasContext.restore(),this.canvasContext.textAlign="center",e?("--"===this.props.bfInfo.rating?(this.canvasContext.fillStyle="#f6697a",this.canvasContext.font="normal "+.3*this.radius+"px sans-serif",this.canvasContext.fillText(this.props.bfInfo.rating,this.refs.canvas.width/2,this.radius),this.canvasContext.fillStyle=this.props.bfInfo.colourCode,this.canvasContext.font="normal "+.09*this.radius+"px sans-serif",this.canvasContext.fillText(this.props.bfInfo.text,this.refs.canvas.width/2+12,this.radius+50)):(this.canvasContext.fillStyle=this.props.bfInfo.colourCode,this.canvasContext.font="normal "+.3*this.radius+"px sans-serif",this.canvasContext.fillText(this.props.bfInfo.rating,this.refs.canvas.width/2,this.radius),this.canvasContext.font="bold "+.07*this.radius+"px sans-serif",this.canvasContext.fillText(this.props.bfInfo.text,this.refs.canvas.width/2,this.radius+50)),this.canvasContext.fillStyle="#8094aa",this.canvasContext.font="600 "+.07*this.radius+"px sans-serif",this.canvasContext.fillText("BassForecast Rating",this.refs.canvas.width/2,this.radius+100)):(this.canvasContext.fillStyle="#8094aa",this.canvasContext.font="600 "+.065*this.radius+"px sans-serif",this.canvasContext.fillText("Download BassForecast",this.refs.canvas.width/2,this.radius-60),this.canvasContext.fillText("for 10 Days Ratings",this.refs.canvas.width/2,this.radius-30))}},{key:"render",value:function(){return s.default.createElement("div",{className:"col-11 col-md-6 col-lg-3 clock__col"},s.default.createElement("div",{style:{height:this.state.overlayHeight},className:"canvas__overlay"},s.default.createElement("canvas",{ref:"canvas",width:700,height:700}),s.default.createElement("a",{style:{display:this.props.isToday?"none":"block"},className:"app__hyperlink appstore",href:this.solunarAppFlyerLink,target:"_blank"},s.default.createElement("img",{src:"/images/AppStore/icon.png",srcSet:"/images/AppStore/icon.png 1x, /images/AppStore/icon@2x.png 2x, /images/AppStore/icon@3x.png 3x"})),s.default.createElement("a",{style:{display:this.props.isToday?"none":"block"},className:"app__hyperlink playstore",href:this.solunarAppFlyerLink,target:"_blank"},s.default.createElement("img",{src:"/images/Play/icon.png",srcSet:"/images/Play/icon.png 1x, /images/Play/icon@2x.png 2x, /images/Play/icon@3x.png 3x"}))))}}]),t}(s.default.Component);t.default=(0,r.withRouter)(c)},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,s=a(1),r=(n=s)&&n.__esModule?n:{default:n};t.default=function(e){var t=e.majorTimes[0][0].match(/[a-zA-Z]+|[0-9]+/g),a=e.majorTimes[0][1].match(/[a-zA-Z]+|[0-9]+/g),n=e.majorTimes[1][0].match(/[a-zA-Z]+|[0-9]+/g),s=e.majorTimes[1][1].match(/[a-zA-Z]+|[0-9]+/g),i=e.minorTimes[0][0].match(/[a-zA-Z]+|[0-9]+/g),o=e.minorTimes[0][1].match(/[a-zA-Z]+|[0-9]+/g),c=e.minorTimes[1][0].match(/[a-zA-Z]+|[0-9]+/g),l=e.minorTimes[1][1].match(/[a-zA-Z]+|[0-9]+/g);return r.default.createElement("div",{className:"widget__container"},r.default.createElement("div",{className:"widget__heading major"},"BassForecast Major Feeding Time"),r.default.createElement("div",{className:"widget__ruler major"}),r.default.createElement("div",{className:"row widget__time-row justify-content-between"},r.default.createElement("div",{className:"widget__time-box"},r.default.createElement("div",{className:"widget__time"},r.default.createElement("div",{className:"time"},t[0]+":"+t[1]),r.default.createElement("div",{className:"text"},t[2])),r.default.createElement("div",{className:"widget__time ruler"}),r.default.createElement("div",{className:"widget__time"},r.default.createElement("div",{className:"time"},a[0]+":"+a[1]),r.default.createElement("div",{className:"text"},a[2]))),r.default.createElement("div",{className:"widget__time-box"},r.default.createElement("div",{className:"widget__time"},r.default.createElement("div",{className:"time"},n[0]+":"+n[1]),r.default.createElement("div",{className:"text"},n[2])),r.default.createElement("div",{className:"widget__time ruler"}),r.default.createElement("div",{className:"widget__time"},r.default.createElement("div",{className:"time"},s[0]+":"+s[1]),r.default.createElement("div",{className:"text"},s[2])))),r.default.createElement("div",{className:"widget__divider"}),r.default.createElement("div",{className:"widget__heading minor"},"BassForecast Minor Feeding Time"),r.default.createElement("div",{className:"widget__ruler minor"}),r.default.createElement("div",{className:"row widget__time-row justify-content-between"},r.default.createElement("div",{className:"widget__time-box"},r.default.createElement("div",{className:"widget__time"},r.default.createElement("div",{className:"time"},i[0]+":"+i[1]),r.default.createElement("div",{className:"text"},i[2])),r.default.createElement("div",{className:"widget__time ruler"}),r.default.createElement("div",{className:"widget__time"},r.default.createElement("div",{className:"time"},o[0]+":"+o[1]),r.default.createElement("div",{className:"text"},o[2]))),r.default.createElement("div",{className:"widget__time-box"},r.default.createElement("div",{className:"widget__time"},r.default.createElement("div",{className:"time"},c[0]+":"+c[1]),r.default.createElement("div",{className:"text"},c[2])),r.default.createElement("div",{className:"widget__time ruler"}),r.default.createElement("div",{className:"widget__time"},r.default.createElement("div",{className:"time"},l[0]+":"+l[1]),r.default.createElement("div",{className:"text"},l[2])))))}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,s=a(1),r=(n=s)&&n.__esModule?n:{default:n};t.default=function(e){var t=function(){switch(e.phaseOfMoon){case"newmoon":return"NewMoon";case"waxingCrescent":return e.percentage>0&&e.percentage<=12?"WaxingCrescent1":e.percentage>12&&e.percentage<=24?"WaxingCrescent2":e.percentage>24&&e.percentage<=36?"WaxingCrescent3":"WaxingCrescent4";case"firstQuarter":return"FirstQuarter";case"waxingGibbous":return e.percentage>50&&e.percentage<=62?"WaxingGibbous1":e.percentage>62&&e.percentage<=74?"WaxingGibbous2":e.percentage>74&&e.percentage<=86?"WaxingGibbous3":"WaxingGibbous4";case"fullmoon":return"FullMoon";case"waningGibbous":return e.percentage>=86&&e.percentage<100?"WaningGibbous1":e.percentage>=74&&e.percentage<86?"WaningGibbous2":e.percentage>=62&&e.percentage<74?"WaningGibbous3":"WaningGibbous4";case"lastQuarter":return"LastQuarter";default:return e.percentage>=36&&e.percentage<50?"WaningCrescent1":e.percentage>=24&&e.percentage<36?"WaningCrescent2":e.percentage>=12&&e.percentage<24?"WaningCrescent3":"WaningCrescent4"}}();return r.default.createElement("div",{className:"moonphase__container"},r.default.createElement("div",{className:"moonphase__content"},r.default.createElement("div",{className:"heading"},"MOON PHASE"),r.default.createElement("div",{className:"moonphase__rating row"},r.default.createElement("div",{className:"moonphase__img-container"},r.default.createElement("img",{src:"/images/MoonPhases/"+t+"/phase.png",srcSet:"/images/MoonPhases/"+t+"/phase.png 1x, /images/MoonPhases/"+t+"/phase@2x.png 2x, /images/MoonPhases/"+t+"/phase@3x.png 3x"})),r.default.createElement("div",{className:"moonphase__rating-content"},r.default.createElement("div",{className:"percentage"},e.percentage+"%"),r.default.createElement("div",{className:"text"},function(){switch(e.phaseOfMoon){case"newmoon":return"New Moon";case"waxingCrescent":return"Waxing Crescent";case"firstQuarter":return"First Quarter";case"waxingGibbous":return"Waxing Gibbous";case"fullmoon":return"Full Moon";case"waningGibbous":return"Waning Gibbous";case"lastQuarter":return"Last Quarter";default:return"Waning Crescent"}}())))),r.default.createElement("img",{src:"/images/MoonPhase-BG/moon-phase-bg.png",srcSet:"/images/MoonPhase-BG/moon-phase-bg.png 1x, /images/MoonPhase-BG/moon-phase-bg@2x.png 2x, /images/MoonPhase-BG/moon-phase-bg@3x.png 3x",className:"moonphase__bg"}))}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}(),s=i(a(1)),r=i(a(49));function i(e){return e&&e.__esModule?e:{default:e}}var o=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a.state={mobileMenuOpen:!1},a.toggleMobileMenu=a.toggleMobileMenu.bind(a),a}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),n(t,[{key:"toggleMobileMenu",value:function(){this.setState({mobileMenuOpen:!this.state.mobileMenuOpen})}},{key:"render",value:function(){return s.default.createElement("div",{className:"header"},s.default.createElement("div",{className:"header__container"},s.default.createElement("div",{className:"logo__container"},s.default.createElement("span",null),s.default.createElement("a",{href:"https://www.bassforecast.com/"},s.default.createElement("img",{src:r.default}))),s.default.createElement("div",{className:"nav__container"},s.default.createElement("ul",{className:"nav"},s.default.createElement("li",{className:"nav-item"},s.default.createElement("a",{className:"nav-link",href:"https://www.bassforecast.com"},"Home")),s.default.createElement("li",{className:"nav-item"},s.default.createElement("a",{className:"nav-link",href:"https://www.bassforecast.com#about"},"About")),s.default.createElement("li",{className:"nav-item"},s.default.createElement("a",{className:"nav-link",href:"https://www.bassforecast.com#howitworks"},"How it works")),s.default.createElement("li",{className:"nav-item"},s.default.createElement("a",{className:"nav-link",href:"https://www.bassforecast.com#features"},"Features")),s.default.createElement("li",{className:"nav-item"},s.default.createElement("a",{className:"nav-link",href:"https://www.bassforecast.com#testimonials"},"Testimonials")),s.default.createElement("li",{className:"nav-item"},s.default.createElement("a",{className:"nav-link",href:"https://www.bassforecast.com/faqs/"},"faqs")),s.default.createElement("li",{className:"nav-item"},s.default.createElement("a",{className:"nav-link",href:"https://www.bassforecast.com#contact"},"contact")),s.default.createElement("li",{className:"nav-item"},s.default.createElement("a",{className:"nav-link active solunar",href:"#"},"solunar")))),s.default.createElement("div",{className:"mobilenav__container"},s.default.createElement("span",{className:"mobilenav__menubar-toggle",onClick:this.toggleMobileMenu}))),s.default.createElement("div",{className:"mobilenav__menu-container"},s.default.createElement("ul",{className:"mobilenav__menu"+(this.state.mobileMenuOpen?" open":"")},s.default.createElement("li",{className:"mobilenav__item"},s.default.createElement("a",{className:"",href:"https://www.bassforecast.com"},"Home")),s.default.createElement("li",{className:"mobilenav__item"},s.default.createElement("a",{className:"",href:"https://www.bassforecast.com#about"},"About")),s.default.createElement("li",{className:"mobilenav__item"},s.default.createElement("a",{className:"",href:"https://www.bassforecast.com#howitworks"},"How it works")),s.default.createElement("li",{className:"mobilenav__item"},s.default.createElement("a",{className:"",href:"https://www.bassforecast.com#features"},"Features")),s.default.createElement("li",{className:"mobilenav__item"},s.default.createElement("a",{className:"",href:"https://www.bassforecast.com#testimonials"},"Testimonials")),s.default.createElement("li",{className:"mobilenav__item"},s.default.createElement("a",{className:"",href:"https://www.bassforecast.com/faqs/"},"faqs")),s.default.createElement("li",{className:"mobilenav__item"},s.default.createElement("a",{className:"",href:"https://www.bassforecast.com#contact"},"contact")),s.default.createElement("li",{className:"mobilenav__item"},s.default.createElement("a",{className:"active solunar",href:"#"},"solunar")))))}}]),t}(s.default.Component);t.default=o},function(e,t,a){e.exports=a.p+"images/ada76339c5677fb19de0e9ff92e684e2-logo.jpg"},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,s=a(1),r=(n=s)&&n.__esModule?n:{default:n};t.default=function(e){return r.default.createElement("div",{className:"date "+(e.active?"active":""),index:e.index,onClick:e.onClick},r.default.createElement("div",{className:"date__day "+(1===e.date.getDate()?"month":"")},e.date&&(1===e.date.getDate()?["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][e.date.getMonth()]:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"][e.date.getDay()])),r.default.createElement("div",{className:"date__date"},e.date&&e.date.getDate()))}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,s=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}(),r=a(1),i=(n=r)&&n.__esModule?n:{default:n},o=a(16),c=a(26),l=a(10);var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return a.state={cityInput:a.props.currentCity.name+" - "+a.props.currentCity.state+", "+a.props.currentCity.country,activeItemIndex:-1},a.onInputChange=a.onInputChange.bind(a),a.onCitySelect=a.onCitySelect.bind(a),a.showDatalist=a.showDatalist.bind(a),a.hideDatalist=a.hideDatalist.bind(a),a}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),s(t,[{key:"onInputChange",value:function(e){e.preventDefault(),e.target.value.length>0?(5===e.target.value.length&&/^\d+$/.test(e.target.value)?this.props.dispatch((0,o.fetchLocationsByPostalCode)(e.target.value)):this.props.dispatch((0,o.fetchLocationsByInput)(e.target.value)),this.showDatalist()):(this.hideDatalist(),this.props.dispatch((0,o.setCities)([]))),this.setState({cityInput:e.target.value})}},{key:"onCitySelect",value:function(e){this.props.dispatch((0,o.setCurrentCity)(e)),this.props.dispatch((0,c.setCurrentCityBFR)({bfr:"--",bfrText:"loading...",bfrColourCode:"#8094aa"})),this.props.dispatch((0,o.fetchSelectedCityInfo)(e.key,this.props.selectedDate)),this.setState({cityInput:e.name+" - "+e.state+", "+e.country})}},{key:"disableDropDownOnOutsideClick",value:function(e,t){"citiesBySearch"!==e.srcElement.id&&"citySearchInput"!==e.srcElement.id&"hidden"!==document.getElementById("citiesBySearch").style.visibility?t.hideDatalist():"visible"===document.getElementById("citiesBySearch").style.visibility&&t.showDatalist()}},{key:"showDatalist",value:function(){this.setState({activeItemIndex:0}),document.getElementById("citiesBySearch")&&(document.getElementById("citiesBySearch").style.visibility="visible")}},{key:"hideDatalist",value:function(){this.setState({activeItemIndex:-1}),document.getElementById("citiesBySearch")&&(document.getElementById("citiesBySearch").style.visibility="hidden")}},{key:"onKeyPressed",value:function(e){var t=this;38==e.keyCode?this.state.activeItemIndex>-1&&this.setState({activeItemIndex:this.state.activeItemIndex-1}):40==e.keyCode?this.state.activeItemIndex>=-1&&this.state.activeItemIndex<this.props.cities.length-1&&this.setState({activeItemIndex:this.state.activeItemIndex+1}):13==e.keyCode&&(e.preventDefault(),this.onCitySelect(this.props.cities.find((function(e,a){return a===t.state.activeItemIndex}))))}},{key:"onInputSelect",value:function(){var e=document.getElementById("citySearchInput");e.focus(),e.select()}},{key:"render",value:function(){var e=this;return document.addEventListener("click",(function(t){e.disableDropDownOnOutsideClick(t,e)})),i.default.createElement("div",{className:"searchbar row justify-content-center"},i.default.createElement("div",{className:"col-11 col-md-6 col-lg-3 searchbar__col"},i.default.createElement("form",{className:"searchbar__form"},i.default.createElement("input",{type:"text",className:"form-control searchbar__input",placeholder:"Search by City or Zipcode",onChange:this.onInputChange,value:this.state.cityInput,id:"citySearchInput",onKeyDown:this.onKeyPressed.bind(this),tabIndex:"0",autoComplete:"off",onClick:this.onInputSelect}),i.default.createElement("img",{src:"/images/Search-icon/search-icon.png",srcSet:"/images/Search-icon/search-icon.png 1x, /images/Search-icon/search-icon@2x.png 2x, /images/Search-icon/search-icon@3x.png 3x"})),i.default.createElement("div",{className:"searchbar__dropdown-container"},i.default.createElement("ul",{id:"citiesBySearch",className:"searchbar__dropdown"},this.props.cities.map((function(t,a){var n=t.name+" - "+t.state+","+t.country;return i.default.createElement("li",{value:t.key,className:"searchbar__dropdown-option"+(a===e.props.cities.length-1?" last":"")+(e.state.activeItemIndex===a?" active":""),onClick:function(a){e.onCitySelect(t)},key:t.key},n)}))))))}}]),t}(i.default.Component);t.default=(0,l.connect)((function(e){return{cities:e.citiesInfo.listOfCities,currentCity:e.citiesInfo.currentCity,bfInfo:e.bfInfo}}))(u)},,,,,,,,,,,,,,,,,,,,function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.BF_SOLUNAR_API="https://4stknmloug.execute-api.us-east-1.amazonaws.com/prod/solunar-lib",t.BFR_API="https://r3hdu19hif.execute-api.us-east-2.amazonaws.com/Prod/bfr",t.BFR_API_KEY="kMavcyx7rY2GPx5MeBftI6dJLNFu3rBn5dMbC469",t.BFR_REQUEST_KEY="S2jtsbRNhg26"},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.AW_API_KEY="QBFLNnAx5ALiSq4gG5MiGO7saHcASt6s",t.AW_LOCATIONS_AUTOCOMPLETE_API="https://api.accuweather.com/locations/v1/cities/autocomplete.json",t.AW_LOCATIONS_POSTAL_CODE_API="https://api.accuweather.com/locations/v1/postalcodes/search.json",t.AW_LOCATIONS_LOCATION_KEY_API="https://api.accuweather.com/locations/v1/"},,,function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,s=a(1),r=(n=s)&&n.__esModule?n:{default:n};t.default=function(e){var t=e.sunrise&&e.sunrise.match(/[a-zA-Z]+|[0-9]+/g)||["--","--","--"],a=e.sunset&&e.sunset.match(/[a-zA-Z]+|[0-9]+/g)||["--","--","--"],n=e.moonrise&&e.moonrise.match(/[a-zA-Z]+|[0-9]+/g)||["--","--","--"],s=e.moonset&&e.moonset.match(/[a-zA-Z]+|[0-9]+/g)||["--","--","--"];return r.default.createElement("div",{className:"row justify-content-center solarlunar__container"},r.default.createElement("div",{className:"sun col"},r.default.createElement("div",{className:"sunrise"},r.default.createElement("img",{src:"/images/Sunrise/sunrise.png",srcSet:"/images/Sunrise/sunrise.png 1x, /images/Sunrise/sunrise@2x.png 2x, /images/Sunrise/sunrise@3x.png 3x"}),r.default.createElement("span",null,"Sunrise")),r.default.createElement("div",{className:"time"},(1===t[0].length?"0"+t[0]:t[0])+":"+t[1]+" "+t[2]),r.default.createElement("div",{className:"sunset"},r.default.createElement("img",{src:"/images/Sunset/sunset.png",srcSet:"/images/Sunset/sunset.png 1x, /images/Sunset/sunset@2x.png 2x, /images/Sunset/sunset@3x.png 3x"}),r.default.createElement("span",null,"Sunset")),r.default.createElement("div",{className:"time last"},(1===a[0].length?"0"+a[0]:a[0])+":"+a[1]+" "+a[2])),r.default.createElement("div",{className:"moon col"},r.default.createElement("div",{className:"moonrise"},r.default.createElement("img",{src:"/images/Moonrise/moonrise.png",srcSet:"/images/Moonrise/moonrise.png 1x, /images/Moonrise/moonrise@2x.png 2x, /images/Moonrise/moonrise@3x.png 3x"}),r.default.createElement("span",null,"Moonrise")),r.default.createElement("div",{className:"time"},(1===n[0].length?"0"+n[0]:n[0])+":"+n[1]+" "+n[2]),r.default.createElement("div",{className:"moonset"},r.default.createElement("img",{src:"/images/Moonset/moonset.png",srcSet:"/images/Moonset/moonset.png 1x, /images/Moonset/moonset@2x.png 2x, /images/Moonset/moonset@3x.png 3x"}),r.default.createElement("span",null,"Moonset")),r.default.createElement("div",{className:"time last"},(1===s[0].length?"0"+s[0]:s[0])+":"+s[1]+" "+s[2])))}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=t.setMoonPhase=function(e){return{type:"SET_MOONPHASE",info:e}};t.setCurrentMoonPhase=function(e){return function(t){var a=0,s=e.getDate(),r=e.getMonth()+1,i=e.getFullYear();r<3&&(i--,r+=12),a=365.25*i+30.6*++r+s-694038.49,a/=29.5305882;var o=100*(a%=1),c=0,l="newmoon";o>=0&&o-100/29.5305882<=0?(c=0,l="newmoon"):o>0&&o<25?(c=2*o,l="waxingCrescent"):o>=25&&o-100/29.5305882<=25?(c=2*o,l="firstQuarter"):o>25&&o<50?(c=2*o,l="waxingGibbous"):o>=50&&o-100/29.5305882<=50?(c=100,l="fullmoon"):o>50&&o<75?(c=100-(2*o-100),l="waningGibbous"):o>=75&&o-100/29.5305882<=75?(c=100-(2*o-100),l="lastQuarter"):(c=100-(2*o-100),l="waningCrescent"),t(n({percentage:Math.round(c),phaseOfMoon:l}))}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,s=a(1),r=(n=s)&&n.__esModule?n:{default:n};t.default=function(e){return r.default.createElement("div",{style:{display:e.errorModal.isOpen?"block":"none"}},r.default.createElement("div",{className:"modal fade"+(e.errorModal.isOpen?" show":""),tabIndex:"-1",role:"dialog","aria-hidden":"true",style:{display:e.errorModal.isOpen?"block":"none"}},r.default.createElement("div",{className:"modal-dialog modal-dialog-centered  modal-md",role:"document"},r.default.createElement("div",{className:"modal-content"},r.default.createElement("div",{className:"modal-header modal__header"},r.default.createElement("div",null,e.errorModal.errorMessage)),r.default.createElement("div",{className:"modal-body modal__body"},r.default.createElement("div",{className:"message "+e.errorModal.errorType},e.errorModal.error),r.default.createElement("div",null,"Blocker"===e.errorModal.errorType?"Please check your internet connection or try again later.":"Please try again later or proceed without BFR.")),r.default.createElement("div",{className:"modal-footer"},r.default.createElement("button",{type:"button",className:"close","aria-label":"Close",color:"primary",onClick:e.onClick},r.default.createElement("span",{"aria-hidden":"true"},"×")))))),r.default.createElement("div",{className:"modal-backdrop fade"+(e.errorModal.isOpen?" show":"")}))}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(12),s=l(a(79)),r=l(a(80)),i=l(a(81)),o=l(a(82)),c=l(a(83));function l(e){return e&&e.__esModule?e:{default:e}}var u=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||n.compose;t.default=function(){return(0,n.createStore)((0,n.combineReducers)({citiesInfo:s.default,bfInfo:r.default,moonPhase:i.default,errorModal:o.default}),u((0,n.applyMiddleware)(c.default)))}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},s={currentCity:{name:"Dallas",state:"Texas",country:"United States",key:"351194",timeZoneName:"America/Chicago"},listOfCities:[]};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:s,t=arguments[1];switch(t.type){case"SET_CITIES":return n({},e,{listOfCities:t.cities});case"SET_CURRENT_CITY":return n({},e,{currentCity:t.city});case"UPDATE_CURRENT_CITY_TZ":return n({},e,{currentCity:n({},e.currentCity,{timeZoneName:t.timeZoneName})});default:return e}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},s={currentForecast:{majorTimes:[["4:00pm","6:00pm"],["4:00am","6:00am"]],minorTimes:[["12:00am","1:00am"],["12:00pm","1:00pm"]],moonrise:"10:00am",moonset:"8:00pm",sunrise:"6:00am",sunset:"6:00pm",isDefault:!0},currentBFR:{rating:"--",text:"loading...",colourCode:"#8094aa"}};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:s,t=arguments[1];switch(t.type){case"SET_CITY_BFR":return n({},e,{currentBFR:{rating:t.info.bfr,text:t.info.bfrText,colourCode:t.info.bfrColourCode}});case"SET_CITY_FORECAST":return n({},e,{currentForecast:{sunrise:t.info.sunrise,sunset:t.info.sunset,moonrise:t.info.moonrise,moonset:t.info.moonset,majorTimes:[t.info.major1period.replace(/ /g,"").split("-"),t.info.major2period.replace(/ /g,"").split("-")],minorTimes:[t.info.minor1period.replace(/ /g,"").split("-"),t.info.minor2period.replace(/ /g,"").split("-")],isDefault:!1}});default:return e}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={percentage:0,phaseOfMoon:"newmoon"};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n,t=arguments[1];switch(t.type){case"SET_MOONPHASE":return t.info;default:return e}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={isOpen:!1,errorMessage:"",error:"",errorType:""};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n,t=arguments[1];switch(t.type){case"SET_ERROR_STATE":return t.errorObj;case"CLOSE_MODAL":return n;default:return e}}},,,function(e,t,a){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,